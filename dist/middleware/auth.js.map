{"version":3,"sources":["../../src/middleware/auth.js"],"names":["secureToken","process","env","SECURE_TOKEN","verifyToken","req","res","next","session","params","sessionDecrypt","split","tokenDecrypt","replace","bcrypt","compare","err","result","status","json","error","message"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,cAAcC,QAAQC,GAAR,CAAYC,YAAhC;;AAEA,IAAMC,cAAc,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,QAC7BC,OAD6B,GAClBH,IAAII,MADc,CAC7BD,OAD6B;;;AAGpC,QAAI;AACA,YAAME,iBAAiBF,QAAQG,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAvB;AACA,YAAMC,eAAeJ,QAAQG,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBE,OAAtB,CAA8B,OAA9B,EAAuC,GAAvC,CAArB;;AAEAC,yBAAOC,OAAP,CAAeL,iBAAiBV,WAAhC,EAA6CY,YAA7C,EAA2D,UAAUI,GAAV,EAAeC,MAAf,EAAuB;AAC9E,gBAAIA,MAAJ,EAAY;AACRV;AACH,aAFD,MAEO;AACH,uBAAOD,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAO,kDAAR,EAArB,CAAP;AACH;AACJ,SAND;AAOH,KAXD,CAWE,OAAOA,KAAP,EAAc;AACZ,eAAOd,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAO,kDAAR,EAA4DC,SAASD,KAArE,EAArB,CAAP;AACH;AACJ,CAjBD;;kBAmBehB,W","file":"auth.js","sourcesContent":["import bcrypt from 'bcrypt';\n\nconst secureToken = process.env.SECURE_TOKEN;\n\nconst verifyToken = (req, res, next) => {\n    const {session} = req.params\n\n    try {\n        const sessionDecrypt = session.split(\":\")[0]\n        const tokenDecrypt = session.split(\":\")[1].replace(\"slash\", \"/\")\n\n        bcrypt.compare(sessionDecrypt + secureToken, tokenDecrypt, function (err, result) {\n            if (result) {\n                next();\n            } else {\n                return res.status(401).json({error: \"Verifique se a Session e o Token estão corretos.\"})\n            }\n        });\n    } catch (error) {\n        return res.status(401).json({error: \"Verifique se a Session e o Token estão corretos.\", message: error})\n    }\n}\n\nexport default verifyToken"]}