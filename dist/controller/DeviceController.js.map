{"version":3,"sources":["../../src/controller/DeviceController.js"],"names":["req","res","session","params","name","body","status","send","message","clientsArray","setProfileName","json","response","log","path","setProfilePic","pathimage","msg","setProfileImage","auth","getAllContacts","contacts","showAllContacts"],"mappings":"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","file":"DeviceController.js","sourcesContent":["// Device Functions\nimport {clientsArray, getSession} from \"../util/SessionUtil\";\n\nexport async function setProfileName(req, res) {\n    const {session} = req.params\n    const {name} = req.body\n\n    if (!getSession(session))\n        return res.status(401).send({message: 'Sessão não informada.'});\n\n    if (!name)\n        return res.status(401).send({message: 'Digite um novo nome de perfil.'});\n\n    try {\n        await clientsArray[session].setProfileName(name);\n        return res.status(201).json({\n            response: {\n                status: true,\n                name: name,\n                session: getSession(session)\n            },\n        })\n    } catch (error) {\n        res.status(400).json({\n            response: {\n                message: 'O nome de usuário de perfil não foi alterado.',\n                session: getSession(session),\n                log: error\n            },\n        })\n    }\n}\n\nexport async function setProfileImage(req, res) {\n    const {session} = req.params\n    const {path} = req.body\n\n    if (!getSession(session))\n        return res.status(401).send({message: 'Sessão não informada.'});\n\n    if (!path)\n        return res.status(401).send({message: 'Informe o caminho da imagem.'});\n\n    try {\n        await clientsArray[getSession(session)].setProfilePic(pathimage);\n        res.status(201).json({\n            response: {\n                message: msg,\n                session: getSession(session),\n                path: path\n            },\n        })\n    } catch (error) {\n        res.status(400).json({\n            response: {\n                message: 'A foto de perfil não foi alterada.',\n                session: getSession(session),\n                log: error\n            },\n        })\n    }\n}\n\nexport async function showAllContacts(req, res) {\n    const {session} = req.params\n\n    if (!getSession(session))\n        return res.status(401).send({auth: false, message: 'Sessão não informada.'});\n\n    try {\n        const contacts = await clientsArray[getSession(session)].getAllContacts();\n        res.status(200).json({\n            response: contacts,\n            session: getSession(session),\n        })\n    } catch (error) {\n        res.status(401).json({\n            response: 'O Whatsapp não está conectado',\n            session: getSession(session),\n        })\n    }\n}"]}