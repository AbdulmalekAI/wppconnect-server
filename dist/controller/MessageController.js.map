{"version":3,"sources":["../../src/controller/MessageController.js"],"names":["req","res","session","params","body","phone","message","isGroup","clientsArray","sendText","returnSucess","io","emit","to","returnError","sendMessage","caption","path","status","send","sendImage","sendFile","error","json","response","log","contact"],"mappings":"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","file":"MessageController.js","sourcesContent":["import {clientsArray} from '../util/SessionUtil'\nimport {getSession} from \"../util/SessionUtil\";\n\nfunction returnError(res, session, error) {\n    res.status(400).json({\n        response: {\n            message: 'Sua mensagem não foi enviada.',\n            session: getSession(session),\n            log: error\n        },\n    })\n}\n\nfunction returnSucess(res, session, phone) {\n    res.status(201).json({\n        response: {\n            message: \"Mensagem enviada com sucesso.\",\n            contact: phone,\n            session: getSession(session)\n        },\n    })\n}\n\nexport async function sendMessage(req, res) {\n    const {session} = req.params\n    const {phone, message, isGroup = false} = req.body\n\n    try {\n        if (isGroup) {\n            await clientsArray[getSession(session)].sendText(phone + \"@g.us\", message);\n        } else {\n            await clientsArray[getSession(session)].sendText(phone + \"@c.us\", message);\n        }\n\n        returnSucess(res, session, phone)\n        req.io.emit('mensagem-enviada', {message: message, to: phone});\n    } catch (error) {\n        returnError(res, session, error)\n    }\n}\n\nexport async function sendImage(req, res) {\n    const {session} = req.params\n    const {phone, caption, path, isGroup = false} = req.body\n\n    if (!phone)\n        return res.status(401).send({message: 'Telefone não informado.'});\n\n    if (!getSession(session))\n        return res.status(401).send({message: 'Sessão não informada.'});\n\n    if (!path)\n        return res.status(401).send({\n            message: 'Informe o caminho da imagem. Exemplo: C:\\\\folder\\\\image.jpg.'\n        });\n\n    try {\n        if (isGroup) {\n            await clientsArray[getSession(session)].sendImage(\n                phone + \"@g.us\", //phone\n                path, //path\n                'image-api.jpg', //image name\n                caption //msg (caption)\n            );\n        } else {\n            await clientsArray[getSession(session)].sendImage(\n                phone + \"@c.us\", //phone\n                path, //path\n                'image-api.jpg', //image name\n                caption //msg (caption)\n            );\n        }\n\n        returnSucess(res, session, phone)\n    } catch (error) {\n        returnError(res, session, error)\n    }\n}\n\nexport async function sendFile(req, res) {\n    const {session} = req.params\n    const {path, phone, isGroup = false} = req.body\n\n    if (!getSession(session))\n        return res.status(401).send({message: 'Sessão não informada.'});\n\n    if (!path)\n        return res.status(401).send({message: 'O caminho do arquivo não foi informado.'});\n\n    try {\n        if (isGroup) {\n            await clientsArray[getSession(session)].sendFile(\n                phone + \"@c.us\", //phone\n                path, //path file\n                'My File', //Title File\n                'Look this file' //Caption\n            );\n        } else {\n            await clientsArray[getSession(session)].sendFile(\n                phone + \"@g.us\", //phone\n                path, //path file\n                'My File', //Title File\n                'Look this file' //Caption\n            );\n        }\n\n        returnSucess(res, session, phone)\n    } catch (error) {\n        returnError(res, session, error)\n    }\n}"]}