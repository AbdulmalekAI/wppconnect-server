{"version":3,"sources":["../../src/util/CreateSessionUtil.js"],"names":["req","res","session","createSessionUtil","clientsArray","status","json","message","opendata","base64Qr","asciiQR","exportQR","statusFind","console","log","headless","devtools","useChrome","debug","logQR","browserArgs","chromiumArgs","refreshQR","disableSpins","start","client","checkStateSession","listenMessages","onStateChange","state","io","emit","sessions","push","conflits","SocketState","CONFLICT","UNPAIRED","UNLAUNCHED","includes","useHere","tokenFile","path","resolve","__dirname","close","fs","unlinkSync","onAnyMessage","from","body","response","qrCode","replace","imageBuffer","Buffer","writeFileSync","data","toString"],"mappings":"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","file":"CreateSessionUtil.js","sourcesContent":["import {clientsArray, sessions} from \"./SessionUtil\";\nimport {create, SocketState} from \"@wppconnect-team/wppconnect\";\nimport fs from \"fs\";\nimport path from \"path\";\n\nlet chromiumArgs = ['--disable-web-security', '--no-sandbox', '--disable-web-security', '--aggressive-cache-discard', '--disable-cache', '--disable-application-cache', '--disable-offline-load-stale-cache', '--disk-cache-size=0', '--disable-background-networking', '--disable-default-apps', '--disable-extensions', '--disable-sync', '--disable-translate', '--hide-scrollbars', '--metrics-recording-only', '--mute-audio', '--no-first-run', '--safebrowsing-disable-auto-update', '--ignore-certificate-errors', '--ignore-ssl-errors', '--ignore-certificate-errors-spki-list'];\n\nexport async function opendata(req, res, session) {\n    await createSessionUtil(req, res, clientsArray, session)\n\n    await res.status(201).json({\n        message: 'Inicializando Sessão',\n        session: session\n    })\n}\n\nasync function createSessionUtil(req, res, clientsArray, session) {\n    try {\n        clientsArray[session] = await create(session, (base64Qr, asciiQR) => {\n            exportQR(req, res, base64Qr, session);\n        }, (statusFind) => {\n            console.log(statusFind + '\\n\\n')\n        }, {\n            headless: true,\n            devtools: false,\n            useChrome: true,\n            debug: false,\n            logQR: true,\n            browserArgs: chromiumArgs,\n            refreshQR: 15000,\n            disableSpins: true,\n        })\n\n        await start(req, res, clientsArray, session);\n    } catch (e) {\n        console.log('error create -> ', e)\n    }\n}\n\nfunction exportQR(req, res, qrCode, session) {\n    qrCode = qrCode.replace('data:image/png;base64,', '');\n    const imageBuffer = Buffer.from(qrCode, 'base64');\n\n    fs.writeFileSync(`${session}.png`, imageBuffer);\n\n    req.io.emit('qrCode', {\n        data: 'data:image/png;base64,' + imageBuffer.toString('base64'),\n        session: session\n    });\n}\n\nasync function start(req, res, client, session) {\n    await checkStateSession(req, res, client, session)\n    await listenMessages(req, client, session)\n}\n\nasync function checkStateSession(req, res, client, session) {\n    await client[session].onStateChange(async (state) => {\n        if (state === 'CONNECTED') {\n            req.io.emit('whatsapp-status', true)\n\n            sessions.push(session); //insere a nova sessão no session\n            console.log('Status Session -> ', session, ' connected');\n        }\n\n        const conflits = [\n            SocketState.CONFLICT,\n            SocketState.UNPAIRED,\n            SocketState.UNLAUNCHED,\n        ];\n\n        if (conflits.includes(state)) {\n            try {\n                await client[session].useHere();\n            } catch (e) {\n                let tokenFile = path.resolve(__dirname, '..', '..', 'tokens', `${session}.data.json`);\n                await client[session].close();\n                fs.unlinkSync(tokenFile);\n\n                await createSessionUtil(req, res, client, session);\n            }\n        }\n    });\n}\n\nasync function listenMessages(req, client, session) {\n    await client[session].onAnyMessage((message) => {\n        console.log(`[${session}]: Mensagem Recebida: \\nTelefone: ' ${message.from}, Mensagem: ${message.body}`)\n        message.session = session\n        req.io.emit('received-message', {response: message})\n    });\n}"]}