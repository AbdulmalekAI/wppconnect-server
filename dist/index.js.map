{"version":3,"sources":["../src/index.js"],"names":["app","PORT","process","env","options","cors","origins","server","io","Socket","use","express","json","req","res","next","on","console","log","sock","id","data","routes","listen"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,sB,CAAU;AACV,IAAMA,MAAM,wBAAZ;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,KAAjC;AACA;AACA;;AAEA;AACA,IAAMG,UAAU;AACZC,UAAM,IADM;AAEZC,aAAS,CAAC,GAAD;AAFG,CAAhB;AAIA,IAAMC,SAAS,wBAAaP,GAAb,CAAf;AACA,IAAMQ,KAAK,IAAIC,cAAJ,CAAWF,MAAX,EAAmBH,OAAnB,CAAX;;AAEAJ,IAAIU,GAAJ,CAAQ,qBAAR,E,CAAiB;AACjBV,IAAIU,GAAJ,CAAQC,kBAAQC,IAAR,EAAR,E,CAAyB;;AAEzBZ,IAAIU,GAAJ,CAAQ,UAACG,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBF,QAAIL,EAAJ,GAASA,EAAT;AACAO;AACH,CAHD;;AAKA;AACAP,GAAGQ,EAAH,CAAM,YAAN,EAAoB,gBAAQ;AACxBC,YAAQC,GAAR,UAAmBC,KAAKC,EAAxB;;AAEAD,SAAKH,EAAL,CAAQ,OAAR,EAAiB,gBAAQ;AACrBC,gBAAQC,GAAR,CAAYG,IAAZ;AACH,KAFD;;AAIAF,SAAKH,EAAL,CAAQ,YAAR,EAAsB,YAAM;AACxBC,gBAAQC,GAAR,UAAmBC,KAAKC,EAAxB;AACH,KAFD;AAGH,CAVD;;AAYApB,IAAIU,GAAJ,CAAQY,cAAR;;AAEAf,OAAOgB,MAAP,CAActB,IAAd;AACAgB,QAAQC,GAAR,0CAAgDjB,IAAhD","file":"index.js","sourcesContent":["import {config} from 'dotenv';\nimport cors from 'cors';\nimport express from 'express';\nimport {createServer} from 'http'\nimport {Server as Socket} from \"socket.io\";\nimport {routes} from './routes';\nimport getAllTokens from './util/GetAllTokens'\n\nconfig(); // DotEnv\nconst app = express();\nconst PORT = process.env.PORT || 21465;\n//Caso sua aplicação fique em algum server\n//o process.env.PORT vai pegar automaticamente a porta recebida.\n\n//SocketIO\nconst options = {\n    cors: true,\n    origins: [\"*\"],\n}\nconst server = createServer(app);\nconst io = new Socket(server, options);\n\napp.use(cors()); //Aceita que nosso server seja acessado através de um website\napp.use(express.json()); //Aceita requisições via JSON\n\napp.use((req, res, next) => {\n    req.io = io;\n    next();\n});\n\n//SocketIO\nio.on('connection', sock => {\n    console.log(`ID: ${sock.id} entrou`)\n\n    sock.on('event', data => {\n        console.log(data)\n    });\n\n    sock.on('disconnect', () => {\n        console.log(`ID: ${sock.id} saiu`)\n    });\n});\n\napp.use(routes);\n\nserver.listen(PORT);\nconsole.log(`O servidor está rodando na porta ${PORT}`)"]}